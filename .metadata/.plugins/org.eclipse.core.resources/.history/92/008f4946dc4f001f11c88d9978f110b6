package com.sbs.service;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.sbs.domain.Board;
import com.sbs.persistence.BoardRepository;

import jakarta.transaction.Transactional;

@Service
public class BoardService {
	
	@Autowired
	private BoardRepository boardRepo;
	
	@Transactional
	public Board saveBoard(Board board) {
		board.setCreateDate(LocalDateTime.now());
		board.setUpdateDate(LocalDateTime.now());
		return boardRepo.save(board);
	}
	
	public Board getBoardById(Long id) {
		return boardRepo.findById(id).orElseThrow(()-> new RuntimeException("Board not found"));
	}
	
	
	@Transactional
	public Board updateBoard(Long id, Board updatedBoard) {
		Board board = boardRepo.findById(id)
				.orElseThrow(()->new RuntimeException("Board not found!"));
		board.setTitle(updatedBoard.getTitle());
		board.setContent(updatedBoard.getContent());
		board.setUpdateDate(LocalDateTime.now());
		
		return boardRepo.save(board);	
	}
	
	@Transactional
	public void deleteBoard(Long id) {
		if(!boardRepo.existsById(id)) {
			throw new RuntimeException("Board not found");
		}
		boardRepo.deleteById(id);
	}
	
	public List<Board> getAllBoard(){
		return boardRepo.findAll();
	}
	
	

}
