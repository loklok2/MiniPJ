package com.sbs.service;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.sbs.domain.Member;
import com.sbs.domain.Role;
import com.sbs.domain.SignupRequest;
import com.sbs.persistence.MemberRepository;

@Service
public class MemberService {

    @Autowired
    private MemberRepository memberRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;

    public Member registerUser(SignupRequest signupRequest) {
        if (memberRepository.existsByUsername(signupRequest.getUsername())) {
            throw new RuntimeException("Username is already taken");
        }

        Member member = new Member();
        member.setUsername(signupRequest.getUsername());
        member.setPassword(passwordEncoder.encode(signupRequest.getPassword()));
        member.setNickname(signupRequest.getNickname()); // 8/5 닉네임저장 추가
        member.setRoles(Role.ROLE_MEMBER);
        member.setEnabled(false); // 8/5 이메일 인증 완료전까지 비활성화 추가
        
        String token = UUID.randomUUID().toString();
        member.setVerificationToken(token);
        
        String verificationLink = "http://localhost:8080/api/auth/verify?token=" + token;
        emailService.
        
        return memberRepository.save(member);
    }
}
